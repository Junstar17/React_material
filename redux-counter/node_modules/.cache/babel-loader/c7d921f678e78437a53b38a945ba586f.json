{"ast":null,"code":"import * as types from '../actions/ActionTypes';\nconst initialState = {\n  counters: [{\n    color: 'black',\n    number: 0\n  }]\n};\n\nfunction counter(state = initialState, action) {\n  const {\n    counters\n  } = state;\n\n  switch (action.type) {\n    case types.CREATE:\n      return {\n        counters: [...counters, {\n          color: action.color,\n          number: 0\n        }]\n      };\n\n    case types.REMOVE:\n      return {\n        counters: counters.slice(0, counters.length - 1)\n      };\n\n    case types.INCREMENT:\n      return {\n        counters: [...counters.slice(0, action.index), { ...counters[action.index],\n          number: counters[action.index].number + 1\n        }, ...counters.slice(index + 1, counters.length)]\n      };\n\n    case types.DECREMENT:\n      return {\n        counters: [...counters.slice(0, action.index), { ...counters[action.index],\n          number: counters[action.index].number - 1\n        }, ...counters.slice(index + 1, counters.length)]\n      };\n\n    case types.SET_COLOR:\n      return {\n        counters: [...counters.slice(0, action.index), { ...counters[action.index],\n          color: action.color\n        }, ...counters.slice(index + 1, counters.length)]\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default counter;","map":{"version":3,"sources":["/Users/junyoung/React/redux-counter/src/reducers/index.js"],"names":["types","initialState","counters","color","number","counter","state","action","type","CREATE","REMOVE","slice","length","INCREMENT","index","DECREMENT","SET_COLOR"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,wBAAvB;AAEA,MAAMC,YAAY,GAAE;AAChBC,EAAAA,QAAQ,EAAC,CACL;AACIC,IAAAA,KAAK,EAAC,OADV;AAEIC,IAAAA,MAAM,EAAC;AAFX,GADK;AADO,CAApB;;AASA,SAASC,OAAT,CAAiBC,KAAK,GAAGL,YAAzB,EAAuCM,MAAvC,EAA8C;AAC1C,QAAM;AAACL,IAAAA;AAAD,MAAaI,KAAnB;;AAEA,UAAOC,MAAM,CAACC,IAAd;AACI,SAAKR,KAAK,CAACS,MAAX;AACI,aAAM;AACFP,QAAAA,QAAQ,EAAC,CACL,GAAGA,QADE,EAEL;AACIC,UAAAA,KAAK,EAACI,MAAM,CAACJ,KADjB;AAEIC,UAAAA,MAAM,EAAC;AAFX,SAFK;AADP,OAAN;;AASJ,SAAKJ,KAAK,CAACU,MAAX;AACI,aAAM;AACFR,QAAAA,QAAQ,EAAEA,QAAQ,CAACS,KAAT,CAAe,CAAf,EAAiBT,QAAQ,CAACU,MAAT,GAAgB,CAAjC;AADR,OAAN;;AAGJ,SAAKZ,KAAK,CAACa,SAAX;AACI,aAAM;AACFX,QAAAA,QAAQ,EAAC,CACL,GAAGA,QAAQ,CAACS,KAAT,CAAe,CAAf,EAAiBJ,MAAM,CAACO,KAAxB,CADE,EAEL,EACI,GAAGZ,QAAQ,CAACK,MAAM,CAACO,KAAR,CADf;AAEIV,UAAAA,MAAM,EAACF,QAAQ,CAACK,MAAM,CAACO,KAAR,CAAR,CAAuBV,MAAvB,GAA8B;AAFzC,SAFK,EAML,GAAGF,QAAQ,CAACS,KAAT,CAAeG,KAAK,GAAC,CAArB,EAAuBZ,QAAQ,CAACU,MAAhC,CANE;AADP,OAAN;;AAUJ,SAAKZ,KAAK,CAACe,SAAX;AACI,aAAM;AACFb,QAAAA,QAAQ,EAAC,CACL,GAAGA,QAAQ,CAACS,KAAT,CAAe,CAAf,EAAiBJ,MAAM,CAACO,KAAxB,CADE,EAEL,EACI,GAAGZ,QAAQ,CAACK,MAAM,CAACO,KAAR,CADf;AAEIV,UAAAA,MAAM,EAACF,QAAQ,CAACK,MAAM,CAACO,KAAR,CAAR,CAAuBV,MAAvB,GAA8B;AAFzC,SAFK,EAML,GAAGF,QAAQ,CAACS,KAAT,CAAeG,KAAK,GAAC,CAArB,EAAuBZ,QAAQ,CAACU,MAAhC,CANE;AADP,OAAN;;AAUJ,SAAKZ,KAAK,CAACgB,SAAX;AACI,aAAM;AACFd,QAAAA,QAAQ,EAAC,CACL,GAAGA,QAAQ,CAACS,KAAT,CAAe,CAAf,EAAiBJ,MAAM,CAACO,KAAxB,CADE,EAEL,EACI,GAAGZ,QAAQ,CAACK,MAAM,CAACO,KAAR,CADf;AAEIX,UAAAA,KAAK,EAACI,MAAM,CAACJ;AAFjB,SAFK,EAML,GAAGD,QAAQ,CAACS,KAAT,CAAeG,KAAK,GAAC,CAArB,EAAuBZ,QAAQ,CAACU,MAAhC,CANE;AADP,OAAN;;AAUJ;AACI,aAAON,KAAP;AAjDR;AAmDH;;AAED,eAAeD,OAAf","sourcesContent":["import * as types from '../actions/ActionTypes';\n\nconst initialState ={\n    counters:[\n        {\n            color:'black',\n            number:0\n        }\n    ]\n};\n\nfunction counter(state = initialState, action){\n    const {counters} = state;\n\n    switch(action.type){\n        case types.CREATE:\n            return{\n                counters:[\n                    ...counters,\n                    {\n                        color:action.color,\n                        number:0\n                    }\n                ]\n            };\n        case types.REMOVE:\n            return{\n                counters: counters.slice(0,counters.length-1)\n            };\n        case types.INCREMENT:\n            return{\n                counters:[\n                    ...counters.slice(0,action.index),\n                    {\n                        ...counters[action.index],\n                        number:counters[action.index].number+1\n                    },\n                    ...counters.slice(index+1,counters.length)\n                ]\n            };\n        case types.DECREMENT:\n            return{\n                counters:[\n                    ...counters.slice(0,action.index),\n                    {\n                        ...counters[action.index],\n                        number:counters[action.index].number-1\n                    },\n                    ...counters.slice(index+1,counters.length)\n                ]\n            };\n        case types.SET_COLOR:\n            return{\n                counters:[\n                    ...counters.slice(0,action.index),\n                    {\n                        ...counters[action.index],\n                        color:action.color\n                    },\n                    ...counters.slice(index+1,counters.length)\n                ]\n            };\n        default:\n            return state;\n    }\n}\n\nexport default counter;"]},"metadata":{},"sourceType":"module"}