{"ast":null,"code":"var _jsxFileName = \"/Users/junyoung/React/todo-list_enhance/src/containers/TodoInputContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as inputActions from '../modules/input';\nimport * as todosActions from '../modules/todos';\nimport TodoInput from '../components/TodoInput';\n\nclass TodoInputContainers extends Component {\n  constructor(...args) {\n    super(...args);\n    this.id = 1;\n\n    this.getId = () => {\n      return ++this.id;\n    };\n\n    this.handleChange = e => {\n      const {\n        value\n      } = e.target;\n      const {\n        InputActions\n      } = this.props;\n      InputActions.setInput(value);\n    };\n\n    this.handleInsert = () => {\n      const {\n        InputActions,\n        TodosActions,\n        value\n      } = this.props;\n      const todo = {\n        id: this.getId(),\n        text: value,\n        done: false\n      };\n      todosActions.insert(todo);\n      InputActions.setInput(\"\");\n    };\n  }\n\n  render() {\n    const {\n      value\n    } = this.props;\n    const {\n      handleChange,\n      handleInsert\n    } = this;\n    return /*#__PURE__*/React.createElement(TodoInput, {\n      onChange: handleChange,\n      onInsert: handleInsert,\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default connect(state => ({\n  value: state.input.get('value')\n}), dispatch => ({\n  InputActions: bindActionCreators(inputActions, dispatch),\n  TodosActions: bindActionCreators(todosActions, dispatch)\n}))(TodoInputContainers);","map":{"version":3,"sources":["/Users/junyoung/React/todo-list_enhance/src/containers/TodoInputContainer.js"],"names":["React","Component","connect","bindActionCreators","inputActions","todosActions","TodoInput","TodoInputContainers","id","getId","handleChange","e","value","target","InputActions","props","setInput","handleInsert","TodosActions","todo","text","done","insert","render","state","input","get","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAAQC,OAAR,QAAuB,aAAvB;AACA,SAASC,kBAAT,QAAkC,OAAlC;AACA,OAAO,KAAKC,YAAZ,MAA8B,kBAA9B;AACA,OAAO,KAAKC,YAAZ,MAA8B,kBAA9B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAGA,MAAMC,mBAAN,SAAkCN,SAAlC,CAA4C;AAAA;AAAA;AAAA,SACxCO,EADwC,GACnC,CADmC;;AAAA,SAExCC,KAFwC,GAEhC,MAAI;AACR,aAAO,EAAE,KAAKD,EAAd;AACH,KAJuC;;AAAA,SAMxCE,YANwC,GAM1BC,CAAD,IAAK;AACd,YAAM;AAACC,QAAAA;AAAD,UAAUD,CAAC,CAACE,MAAlB;AACA,YAAK;AAACC,QAAAA;AAAD,UAAiB,KAAKC,KAA3B;AACAD,MAAAA,YAAY,CAACE,QAAb,CAAsBJ,KAAtB;AACH,KAVuC;;AAAA,SAYxCK,YAZwC,GAY3B,MAAI;AACb,YAAM;AAACH,QAAAA,YAAD;AAAeI,QAAAA,YAAf;AAA6BN,QAAAA;AAA7B,UAAsC,KAAKG,KAAjD;AACA,YAAMI,IAAI,GAAC;AACPX,QAAAA,EAAE,EAAE,KAAKC,KAAL,EADG;AAEPW,QAAAA,IAAI,EAAER,KAFC;AAGPS,QAAAA,IAAI,EAAE;AAHC,OAAX;AAKAhB,MAAAA,YAAY,CAACiB,MAAb,CAAoBH,IAApB;AACAL,MAAAA,YAAY,CAACE,QAAb,CAAsB,EAAtB;AACH,KArBuC;AAAA;;AAsBxCO,EAAAA,MAAM,GAAG;AACL,UAAM;AAACX,MAAAA;AAAD,QAAQ,KAAKG,KAAnB;AACA,UAAK;AAACL,MAAAA,YAAD;AAAcO,MAAAA;AAAd,QAA4B,IAAjC;AAEA,wBACI,oBAAC,SAAD;AACA,MAAA,QAAQ,EAAEP,YADV;AAEA,MAAA,QAAQ,EAAEO,YAFV;AAGA,MAAA,KAAK,EAAEL,KAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAMH;;AAhCuC;;AAkC5C,eAAeV,OAAO,CAAEsB,KAAD,KAAU;AAC7BZ,EAAAA,KAAK,EAACY,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,OAAhB;AADuB,CAAV,CAAD,EAGrBC,QAAD,KAAa;AACTb,EAAAA,YAAY,EAAEX,kBAAkB,CAACC,YAAD,EAAcuB,QAAd,CADvB;AAETT,EAAAA,YAAY,EAAEf,kBAAkB,CAACE,YAAD,EAAcsB,QAAd;AAFvB,CAAb,CAHsB,CAAP,CAObpB,mBAPa,CAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport {connect } from 'react-redux';\nimport { bindActionCreators} from 'redux';\nimport * as inputActions from '../modules/input'\nimport * as todosActions from '../modules/todos'\nimport TodoInput from '../components/TodoInput';\n\n\nclass TodoInputContainers extends Component {\n    id = 1\n    getId = ()=>{\n        return ++this.id;\n    }\n\n    handleChange=(e)=>{\n        const {value} = e.target;\n        const{InputActions} = this.props;\n        InputActions.setInput(value);\n    }\n\n    handleInsert=()=>{\n        const {InputActions, TodosActions, value} = this.props;\n        const todo={\n            id: this.getId(),\n            text: value,\n            done: false\n        };\n        todosActions.insert(todo);\n        InputActions.setInput(\"\");\n    }\n    render() {\n        const {value}=this.props;\n        const{handleChange,handleInsert}=this;\n\n        return (\n            <TodoInput \n            onChange={handleChange}\n            onInsert={handleInsert}\n            value={value}/>\n        );\n    }\n}\nexport default connect((state)=>({\n    value:state.input.get('value')\n}),\n(dispatch)=>({\n    InputActions: bindActionCreators(inputActions,dispatch),\n    TodosActions: bindActionCreators(todosActions,dispatch)\n})\n)(TodoInputContainers);"]},"metadata":{},"sourceType":"module"}