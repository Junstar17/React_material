{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { Map, fromJS } from 'immutable';\nimport { pender } from 'redux-pender';\nimport * as api from 'lib/api';\nconst GET_POST = \"post/GET_POST\";\nconst REMOVE_POST = 'post/REMOVE_POST';\nexport const getPost = createAction(GET_POST, api.getPost);\nexport const removePost = createAction(REMOVE_POST, api.removePost);\nconst initialState = Map({\n  post: Map({})\n});\nexport default handleActions({ ...pender({\n    type: GET_POST,\n    onSuccess: (state, action) => {\n      const {\n        data: post\n      } = action.payload;\n      return state.set('post', fromJS(post));\n    }\n  })\n}, initialState);","map":{"version":3,"sources":["/Users/junyoung/React/blog-frontend/src/store/modules/post.js"],"names":["createAction","handleActions","Map","fromJS","pender","api","GET_POST","REMOVE_POST","getPost","removePost","initialState","post","type","onSuccess","state","action","data","payload","set"],"mappings":"AAAA,SAAQA,YAAR,EAAsBC,aAAtB,QAA0C,eAA1C;AAEA,SAAQC,GAAR,EAAcC,MAAd,QAA2B,WAA3B;AACA,SAAQC,MAAR,QAAqB,cAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,SAArB;AAEA,MAAMC,QAAQ,GAAG,eAAjB;AACA,MAAMC,WAAW,GAAG,kBAApB;AAGA,OAAO,MAAMC,OAAO,GAAGR,YAAY,CAACM,QAAD,EAAUD,GAAG,CAACG,OAAd,CAA5B;AACP,OAAO,MAAMC,UAAU,GAAET,YAAY,CAACO,WAAD,EAAcF,GAAG,CAACI,UAAlB,CAA9B;AAEP,MAAMC,YAAY,GAAGR,GAAG,CAAC;AACrBS,EAAAA,IAAI,EAACT,GAAG,CAAC,EAAD;AADa,CAAD,CAAxB;AAIA,eAAeD,aAAa,CAAC,EACzB,GAAGG,MAAM,CAAC;AACNQ,IAAAA,IAAI,EAACN,QADC;AAENO,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAOC,MAAP,KAAgB;AACvB,YAAK;AAACC,QAAAA,IAAI,EAAEL;AAAP,UAAeI,MAAM,CAACE,OAA3B;AACA,aAAOH,KAAK,CAACI,GAAN,CAAU,MAAV,EAAiBf,MAAM,CAACQ,IAAD,CAAvB,CAAP;AACH;AALK,GAAD;AADgB,CAAD,EASxBD,YATwB,CAA5B","sourcesContent":["import {createAction, handleActions} from 'redux-actions';\n\nimport {Map , fromJS} from 'immutable';\nimport {pender} from 'redux-pender';\nimport * as api from 'lib/api';\n\nconst GET_POST = \"post/GET_POST\";\nconst REMOVE_POST = 'post/REMOVE_POST';\n\n\nexport const getPost = createAction(GET_POST,api.getPost);\nexport const removePost= createAction(REMOVE_POST, api.removePost);\n\nconst initialState = Map({\n    post:Map({})\n});\n\nexport default handleActions({\n    ...pender({\n        type:GET_POST,\n        onSuccess: (state,action)=>{\n            const{data: post} = action.payload;\n            return state.set('post',fromJS(post));\n        }\n    }),\n},\n    initialState);\n"]},"metadata":{},"sourceType":"module"}