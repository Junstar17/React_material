{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { Map, List, fromJS } from 'immutable';\nimport { pender } from 'redux-pender';\nimport * as api from 'lib/api';\nconst GET_POST_LIST = 'list/GET_POST_LIST';\nexport const getPostList = createAction(GET_POST_LIST, api.getPostList, meta => meta);\nconst initialState = Map({\n  posts: List(),\n  lastPage: null\n});\nexport default handleActions({ ...pender({\n    type: GET_POST_LIST,\n    onSuccess: (state, action) => {\n      const {\n        data: posts\n      } = action.payload;\n      const lastPage = action.payload.headers['last-page'];\n      return state.set('posts', fromJS(posts)).set('lastPage', parseInt(lastPage, 10));\n    }\n  })\n}, initialState);","map":{"version":3,"sources":["/Users/junyoung/React/blog-frontend/src/store/modules/list.js"],"names":["createAction","handleActions","Map","List","fromJS","pender","api","GET_POST_LIST","getPostList","meta","initialState","posts","lastPage","type","onSuccess","state","action","data","payload","headers","set","parseInt"],"mappings":"AAAA,SAAQA,YAAR,EAAsBC,aAAtB,QAA0C,eAA1C;AAEA,SAAQC,GAAR,EAAaC,IAAb,EAAmBC,MAAnB,QAAgC,WAAhC;AACA,SAAQC,MAAR,QAAqB,cAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,SAArB;AAEA,MAAMC,aAAa,GAAG,oBAAtB;AAEA,OAAO,MAAMC,WAAW,GAAGR,YAAY,CAACO,aAAD,EAAeD,GAAG,CAACE,WAAnB,EAAgCC,IAAI,IAAIA,IAAxC,CAAhC;AAEP,MAAMC,YAAY,GAAGR,GAAG,CAAC;AACrBS,EAAAA,KAAK,EAACR,IAAI,EADW;AAErBS,EAAAA,QAAQ,EAAE;AAFW,CAAD,CAAxB;AAKA,eAAeX,aAAa,CAAC,EACzB,GAAGI,MAAM,CAAC;AACNQ,IAAAA,IAAI,EAACN,aADC;AAENO,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAOC,MAAP,KAAgB;AACvB,YAAM;AAACC,QAAAA,IAAI,EAAEN;AAAP,UAAgBK,MAAM,CAACE,OAA7B;AAEA,YAAMN,QAAQ,GAAGI,MAAM,CAACE,OAAP,CAAeC,OAAf,CAAuB,WAAvB,CAAjB;AACA,aAAOJ,KAAK,CAACK,GAAN,CAAU,OAAV,EAAkBhB,MAAM,CAACO,KAAD,CAAxB,EAAiCS,GAAjC,CAAqC,UAArC,EAAgDC,QAAQ,CAACT,QAAD,EAAU,EAAV,CAAxD,CAAP;AACH;AAPK,GAAD;AADgB,CAAD,EAWxBF,YAXwB,CAA5B","sourcesContent":["import {createAction, handleActions} from 'redux-actions';\n\nimport {Map, List, fromJS} from 'immutable';\nimport {pender} from 'redux-pender';\nimport * as api from 'lib/api';\n\nconst GET_POST_LIST = 'list/GET_POST_LIST';\n\nexport const getPostList = createAction(GET_POST_LIST,api.getPostList, meta => meta);\n\nconst initialState = Map({\n    posts:List(),\n    lastPage: null\n});\n\nexport default handleActions({\n    ...pender({\n        type:GET_POST_LIST,\n        onSuccess: (state,action)=>{\n            const {data: posts} = action.payload;\n\n            const lastPage = action.payload.headers['last-page'];\n            return state.set('posts',fromJS(posts)).set('lastPage',parseInt(lastPage,10));\n        }\n    })\n},\n    initialState);\n"]},"metadata":{},"sourceType":"module"}