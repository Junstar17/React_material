{"ast":null,"code":"var _jsxFileName = \"/Users/junyoung/React/blog-frontend/src/components/common/Button/Button.js\";\nimport React from 'react';\nimport styles from './Button.scss';\nimport classNames from 'classnames/bind';\nimport { Link } from 'react-router-dom';\nconst cx = classNames.bind(styles); // 전달 받은 className, onClick 등의 값들이 rest 안에 들어 있습니다.\n// JSX에서 ...을 사용하면 내부에 있는 값들을 props로 넣어줍니다.\n\nconst Div = ({\n  children,\n  ...rest\n}) => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, rest, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 38\n  }\n}), children);\n\nconst Button = ({\n  children,\n  to,\n  onClick,\n  disabled,\n  theme = 'default'\n}) => {\n  // to 값이 존재하면 Link를 사용하고, 그렇지 않으면 div를 사용합니다.\n  // 비활성화되어 있는 버튼인 경우에도 div가 사용됩니다.\n  const Element = to && !disabled ? Link : Div; // 비활성화되면 onClick은 실행되지 않습니다\n  // disabled 값이 true가 되면 className에 disabled가 추가됩니다.\n\n  return /*#__PURE__*/React.createElement(Element, {\n    to: to,\n    className: cx('button', theme, {\n      disabled\n    }),\n    onClick: disabled ? () => null : onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default Button;","map":{"version":3,"sources":["/Users/junyoung/React/blog-frontend/src/components/common/Button/Button.js"],"names":["React","styles","classNames","Link","cx","bind","Div","children","rest","Button","to","onClick","disabled","theme","Element"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,MAAMC,EAAE,GAAGF,UAAU,CAACG,IAAX,CAAgBJ,MAAhB,CAAX,C,CAEA;AACA;;AACA,MAAMK,GAAG,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAW,KAAGC;AAAd,CAAD,kBAAyB,6CAASA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAgBD,QAAhB,CAArC;;AAEA,MAAME,MAAM,GAAG,CAAC;AACdF,EAAAA,QADc;AACJG,EAAAA,EADI;AACAC,EAAAA,OADA;AACSC,EAAAA,QADT;AACmBC,EAAAA,KAAK,GAAG;AAD3B,CAAD,KAET;AACJ;AACA;AACA,QAAMC,OAAO,GAAIJ,EAAE,IAAI,CAACE,QAAR,GAAoBT,IAApB,GAA2BG,GAA3C,CAHI,CAKJ;AACA;;AACA,sBACE,oBAAC,OAAD;AACE,IAAA,EAAE,EAAEI,EADN;AAEE,IAAA,SAAS,EAAEN,EAAE,CAAC,QAAD,EAAWS,KAAX,EAAkB;AAAED,MAAAA;AAAF,KAAlB,CAFf;AAGE,IAAA,OAAO,EAAEA,QAAQ,GAAG,MAAM,IAAT,GAAgBD,OAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGJ,QAJH,CADF;AAQD,CAjBD;;AAmBA,eAAeE,MAAf","sourcesContent":["import React from 'react';\nimport styles from './Button.scss';\nimport classNames from 'classnames/bind';\nimport { Link } from 'react-router-dom';\n\nconst cx = classNames.bind(styles);\n\n// 전달 받은 className, onClick 등의 값들이 rest 안에 들어 있습니다.\n// JSX에서 ...을 사용하면 내부에 있는 값들을 props로 넣어줍니다.\nconst Div = ({children, ...rest}) => <div {...rest}>{children}</div>\n\nconst Button = ({\n  children, to, onClick, disabled, theme = 'default',\n}) => {\n  // to 값이 존재하면 Link를 사용하고, 그렇지 않으면 div를 사용합니다.\n  // 비활성화되어 있는 버튼인 경우에도 div가 사용됩니다.\n  const Element = (to && !disabled) ? Link : Div;\n\n  // 비활성화되면 onClick은 실행되지 않습니다\n  // disabled 값이 true가 되면 className에 disabled가 추가됩니다.\n  return (\n    <Element \n      to={to} \n      className={cx('button', theme, { disabled })} \n      onClick={disabled ? () => null : onClick}>\n      {children}\n    </Element>\n  )\n}\n  \nexport default Button;"]},"metadata":{},"sourceType":"module"}