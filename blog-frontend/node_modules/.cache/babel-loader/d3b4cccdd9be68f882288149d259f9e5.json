{"ast":null,"code":"var _jsxFileName = \"/Users/junyoung/React/blog-frontend/src/containers/post/Post.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as postActions from 'store/modules/post';\nimport PostInfo from 'components/post/PostInfo';\nimport PostBody from 'components/post/PostBody';\n\nclass Post extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.initialize = async () => {\n      const {\n        PostActions,\n        id\n      } = this.props;\n\n      try {\n        await PostActions.getPost(id);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.initialize();\n  }\n\n  render() {\n    const {\n      loading,\n      post\n    } = this.props;\n    if (loading) return null;\n    const {\n      title,\n      body,\n      publishedDate,\n      tags\n    } = post.toJS();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PostInfo, {\n      title: title,\n      publishedDate: publishedDate,\n      tags: tags,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(PostBody, {\n      body: body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default connect(state => ({\n  post: state.post.get('post'),\n  loading: state.pender.pending['/post/GET_POST']\n}), dispatch => ({\n  PostActions: bindActionCreators(postActions, dispatch)\n}))(Post);","map":{"version":3,"sources":["/Users/junyoung/React/blog-frontend/src/containers/post/Post.js"],"names":["React","Component","connect","bindActionCreators","postActions","PostInfo","PostBody","Post","initialize","PostActions","id","props","getPost","e","console","log","componentDidMount","render","loading","post","title","body","publishedDate","tags","toJS","state","get","pender","pending","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,KAAKC,WAAZ,MAA6B,oBAA7B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;AAEA,MAAMC,IAAN,SAAmBN,SAAnB,CAA6B;AAAA;AAAA;;AAAA,SAEzBO,UAFyB,GAEZ,YAAW;AACpB,YAAM;AAACC,QAAAA,WAAD;AAAcC,QAAAA;AAAd,UAAoB,KAAKC,KAA/B;;AACA,UAAG;AACC,cAAMF,WAAW,CAACG,OAAZ,CAAoBF,EAApB,CAAN;AACH,OAFD,CAEC,OAAMG,CAAN,EAAQ;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,KATwB;AAAA;;AAUzBG,EAAAA,iBAAiB,GAAE;AACf,SAAKR,UAAL;AACH;;AACDS,EAAAA,MAAM,GAAG;AACL,UAAK;AAACC,MAAAA,OAAD;AAASC,MAAAA;AAAT,QAAgB,KAAKR,KAA1B;AAEA,QAAGO,OAAH,EAAY,OAAO,IAAP;AAEZ,UAAM;AAAEE,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeC,MAAAA,aAAf;AAA8BC,MAAAA;AAA9B,QAAsCJ,IAAI,CAACK,IAAL,EAA5C;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEJ,KAAjB;AAAwB,MAAA,aAAa,EAAEE,aAAvC;AAAsD,MAAA,IAAI,EAAEC,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEF,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAzBwB;;AA4B7B,eAAenB,OAAO,CACjBuB,KAAD,KAAY;AACRN,EAAAA,IAAI,EAAGM,KAAK,CAACN,IAAN,CAAWO,GAAX,CAAe,MAAf,CADC;AAERR,EAAAA,OAAO,EAAEO,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAqB,gBAArB;AAFD,CAAZ,CADkB,EAKjBC,QAAD,KAAe;AACXpB,EAAAA,WAAW,EAAGN,kBAAkB,CAACC,WAAD,EAAayB,QAAb;AADrB,CAAf,CALkB,CAAP,CAQbtB,IARa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as postActions from 'store/modules/post';\nimport PostInfo from 'components/post/PostInfo';\nimport PostBody from 'components/post/PostBody';\n\nclass Post extends Component {\n\n    initialize = async () =>{\n        const {PostActions, id} = this.props;\n        try{\n            await PostActions.getPost(id);\n        }catch(e){\n            console.log(e);\n        }\n    }\n    componentDidMount(){\n        this.initialize();\n    }\n    render() {\n        const{loading,post}= this.props;\n\n        if(loading) return null;\n\n        const { title, body, publishedDate, tags} = post.toJS();\n        return (\n            <div>\n                <PostInfo title={title} publishedDate={publishedDate} tags={tags}/>\n                <PostBody body={body} />\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    (state) => ({\n        post : state.post.get('post'),\n        loading: state.pender.pending['/post/GET_POST']\n    }),\n    (dispatch) => ({\n        PostActions : bindActionCreators(postActions,dispatch)\n    })\n)(Post);"]},"metadata":{},"sourceType":"module"}