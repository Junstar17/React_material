{"ast":null,"code":"var _jsxFileName = \"/Users/junyoung/React/blog-frontend/src/containers/list/ListContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as listActions from 'store/modules/list';\nimport PostList from 'components/list/PostList';\nimport Pagination from 'components/list/Pagination';\n\nclass ListContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getPostList = () => {\n      const {\n        tag,\n        page,\n        ListActions\n      } = this.props;\n      ListActions.getPostList({\n        page,\n        tag\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getPostList();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.page !== this.props.page || prevProps.tag !== this.props.tag) {\n      this.getPostList();\n      document.documentElement.scrollTop = 0;\n    }\n  }\n\n  render() {\n    const {\n      loading,\n      posts,\n      page,\n      lastPage,\n      tag\n    } = this.props;\n    if (loading) return null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PostList, {\n      posts: posts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Pagination, {\n      page: page,\n      lastPage: lastPage,\n      tag: tag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default connect(state => ({\n  lastPage: state.list.get('lastPage'),\n  posts: state.list.get('posts'),\n  loading: state.pender.pending['list/GET_POST_LIST']\n}), dispatch => ({\n  ListActions: bindActionCreators(listActions, dispatch)\n}))(ListContainer);","map":{"version":3,"sources":["/Users/junyoung/React/blog-frontend/src/containers/list/ListContainer.js"],"names":["React","Component","connect","bindActionCreators","listActions","PostList","Pagination","ListContainer","getPostList","tag","page","ListActions","props","componentDidMount","componentDidUpdate","prevProps","prevState","document","documentElement","scrollTop","render","loading","posts","lastPage","state","list","get","pender","pending","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,KAAKC,WAAZ,MAA6B,oBAA7B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;AAEA,MAAMC,aAAN,SAA4BN,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAElCO,WAFkC,GAErB,MAAK;AACd,YAAM;AAACC,QAAAA,GAAD;AAAKC,QAAAA,IAAL;AAAUC,QAAAA;AAAV,UAA0B,KAAKC,KAArC;AACAD,MAAAA,WAAW,CAACH,WAAZ,CAAwB;AAACE,QAAAA,IAAD;AAAMD,QAAAA;AAAN,OAAxB;AACH,KALiC;AAAA;;AAMlCI,EAAAA,iBAAiB,GAAE;AACf,SAAKL,WAAL;AACH;;AAEDM,EAAAA,kBAAkB,CAACC,SAAD,EAAWC,SAAX,EAAqB;AACnC,QAAGD,SAAS,CAACL,IAAV,KAAmB,KAAKE,KAAL,CAAWF,IAA9B,IAAsCK,SAAS,CAACN,GAAV,KAAkB,KAAKG,KAAL,CAAWH,GAAtE,EAA0E;AACtE,WAAKD,WAAL;AACAS,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,GAAoC,CAApC;AACH;AACJ;;AACDC,EAAAA,MAAM,GAAG;AACL,UAAK;AAACC,MAAAA,OAAD;AAAUC,MAAAA,KAAV;AAAiBZ,MAAAA,IAAjB;AAAuBa,MAAAA,QAAvB;AAAiCd,MAAAA;AAAjC,QAAwC,KAAKG,KAAlD;AACA,QAAGS,OAAH,EAAY,OAAO,IAAP;AAEZ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAEZ,IAAlB;AAAwB,MAAA,QAAQ,EAAEa,QAAlC;AAA4C,MAAA,GAAG,EAAEd,GAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AA1BiC;;AA6BtC,eAAeP,OAAO,CACjBsB,KAAD,KAAU;AACND,EAAAA,QAAQ,EAAEC,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe,UAAf,CADJ;AAENJ,EAAAA,KAAK,EAAEE,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe,OAAf,CAFD;AAGNL,EAAAA,OAAO,EAAEG,KAAK,CAACG,MAAN,CAAaC,OAAb,CAAqB,oBAArB;AAHH,CAAV,CADkB,EAMjBC,QAAD,KAAa;AACTlB,EAAAA,WAAW,EAAER,kBAAkB,CAACC,WAAD,EAAayB,QAAb;AADtB,CAAb,CANkB,CAAP,CASbtB,aATa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as listActions from 'store/modules/list';\nimport PostList from 'components/list/PostList';\nimport Pagination from 'components/list/Pagination';\n\nclass ListContainer extends Component {\n\n    getPostList= () =>{\n        const {tag,page,ListActions } = this.props;\n        ListActions.getPostList({page,tag});\n    }\n    componentDidMount(){\n        this.getPostList();\n    }\n\n    componentDidUpdate(prevProps,prevState){\n        if(prevProps.page !== this.props.page || prevProps.tag !== this.props.tag){\n            this.getPostList();\n            document.documentElement.scrollTop =0;\n        }\n    }\n    render() {\n        const{loading, posts, page, lastPage, tag} = this.props;\n        if(loading) return null;\n\n        return (\n            <div>\n                <PostList posts={posts} />\n                <Pagination page={page} lastPage={lastPage} tag={tag}/>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    (state)=>({\n        lastPage: state.list.get('lastPage'),\n        posts: state.list.get('posts'),\n        loading: state.pender.pending['list/GET_POST_LIST']\n    }),\n    (dispatch)=>({\n        ListActions: bindActionCreators(listActions,dispatch)\n    })\n)(ListContainer);"]},"metadata":{},"sourceType":"module"}