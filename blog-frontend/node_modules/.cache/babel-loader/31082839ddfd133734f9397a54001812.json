{"ast":null,"code":"var _jsxFileName = \"/Users/junyoung/React/blog-frontend/src/containers/editor/EditorHeaderContainer.js\";\nimport React, { Component } from 'react';\nimport EditorHeader from 'components/editor/EditorHeader';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport * as editorActions from 'store/modules/editor';\n\nclass EditorHeaderContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleGoBack = () => {\n      const {\n        history\n      } = this.props;\n      history.goBack();\n    };\n\n    this.handleSubmit = async () => {\n      const {\n        title,\n        markdown,\n        tags,\n        EditorActions,\n        history\n      } = this.props;\n      const post = {\n        title,\n        body: markdown,\n        tags: tags === \"\" ? [] : [...new Set(tags.split(',').map(tag => tag.trim()))]\n      };\n\n      try {\n        await EditorActions.writePost(post);\n        history.push(`/post/${this.props.postId}`);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n  }\n\n  componentDidMount() {\n    const {\n      EditorActions\n    } = this.props;\n    EditorActions.initialize();\n  }\n\n  render() {\n    const {\n      handleGoBack,\n      handleSubmit\n    } = this;\n    return /*#__PURE__*/React.createElement(EditorHeader, {\n      onGoBack: handleGoBack,\n      handleSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nexport default connect(state => ({\n  title: state.editor.get('title'),\n  markdown: state.editor.get('markdown'),\n  tags: state.editor.get('tags'),\n  postId: state.editor.get('postId')\n}), dispatch => ({\n  EditorActions: bindActionCreators(editorActions, dispatch)\n}))(withRouter(EditorHeaderContainer));","map":{"version":3,"sources":["/Users/junyoung/React/blog-frontend/src/containers/editor/EditorHeaderContainer.js"],"names":["React","Component","EditorHeader","connect","bindActionCreators","withRouter","editorActions","EditorHeaderContainer","handleGoBack","history","props","goBack","handleSubmit","title","markdown","tags","EditorActions","post","body","Set","split","map","tag","trim","writePost","push","postId","e","console","log","componentDidMount","initialize","render","state","editor","get","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAO,KAAKC,aAAZ,MAA+B,sBAA/B;;AAEA,MAAMC,qBAAN,SAAoCN,SAApC,CAA8C;AAAA;AAAA;;AAAA,SAO1CO,YAP0C,GAO5B,MAAK;AACf,YAAM;AAAEC,QAAAA;AAAF,UAAY,KAAKC,KAAvB;AACAD,MAAAA,OAAO,CAACE,MAAR;AACH,KAVyC;;AAAA,SAY1CC,YAZ0C,GAY3B,YAAY;AACvB,YAAM;AAAEC,QAAAA,KAAF;AAAQC,QAAAA,QAAR;AAAiBC,QAAAA,IAAjB;AAAsBC,QAAAA,aAAtB;AAAoCP,QAAAA;AAApC,UAA+C,KAAKC,KAA1D;AACA,YAAMO,IAAI,GAAG;AACTJ,QAAAA,KADS;AAETK,QAAAA,IAAI,EAAEJ,QAFG;AAGTC,QAAAA,IAAI,EAAEA,IAAI,KAAK,EAAT,GAAc,EAAd,GAAmB,CAAC,GAAG,IAAII,GAAJ,CAAQJ,IAAI,CAACK,KAAL,CAAW,GAAX,EAAgBC,GAAhB,CAAoBC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAAzB,CAAR,CAAJ;AAHhB,OAAb;;AAKA,UAAG;AACC,cAAMP,aAAa,CAACQ,SAAd,CAAwBP,IAAxB,CAAN;AACAR,QAAAA,OAAO,CAACgB,IAAR,CAAc,SAAQ,KAAKf,KAAL,CAAWgB,MAAO,EAAxC;AACH,OAHD,CAGC,OAAMC,CAAN,EAAQ;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,KAzByC;AAAA;;AAC1CG,EAAAA,iBAAiB,GAAE;AACf,UAAK;AAACd,MAAAA;AAAD,QAAkB,KAAKN,KAA5B;AACAM,IAAAA,aAAa,CAACe,UAAd;AAEH;;AAsBDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACxB,MAAAA,YAAD;AAAcI,MAAAA;AAAd,QAA8B,IAApC;AAEA,wBACG,oBAAC,YAAD;AACC,MAAA,QAAQ,EAAIJ,YADb;AAEC,MAAA,YAAY,EAAII,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH;AAMH;;AApCyC;;AAuC9C,eAAeT,OAAO,CACjB8B,KAAD,KAAY;AACRpB,EAAAA,KAAK,EAAEoB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,OAAjB,CADC;AAERrB,EAAAA,QAAQ,EAAEmB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,UAAjB,CAFF;AAGRpB,EAAAA,IAAI,EAAGkB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,MAAjB,CAHC;AAIRT,EAAAA,MAAM,EAAEO,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,QAAjB;AAJA,CAAZ,CADkB,EAOjBC,QAAD,KAAe;AACXpB,EAAAA,aAAa,EAAGZ,kBAAkB,CAACE,aAAD,EAAe8B,QAAf;AADvB,CAAf,CAPkB,CAAP,CAUb/B,UAAU,CAACE,qBAAD,CAVG,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport EditorHeader from 'components/editor/EditorHeader';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {withRouter} from 'react-router-dom';\nimport * as editorActions from 'store/modules/editor';\n\nclass EditorHeaderContainer extends Component {\n    componentDidMount(){\n        const{EditorActions} = this.props;\n        EditorActions.initialize();\n\n    }\n    \n    handleGoBack =() =>{\n        const { history} =this.props;\n        history.goBack();\n    }\n\n    handleSubmit = async () => {\n        const { title,markdown,tags,EditorActions,history} = this.props;\n        const post = {\n            title,\n            body: markdown,\n            tags: tags === \"\" ? [] : [...new Set(tags.split(',').map(tag=>tag.trim()))]\n        };\n        try{\n            await EditorActions.writePost(post);\n            history.push(`/post/${this.props.postId}`);\n        }catch(e){\n            console.log(e);\n        }\n    }\n\n    render() {\n        const {handleGoBack,handleSubmit} = this;\n\n        return (\n           <EditorHeader \n            onGoBack = {handleGoBack}\n            handleSubmit = {handleSubmit}\n            />\n        );\n    }\n}\n\nexport default connect(\n    (state) => ({\n        title: state.editor.get('title'),\n        markdown: state.editor.get('markdown'),\n        tags : state.editor.get('tags'),\n        postId: state.editor.get('postId')\n    }),\n    (dispatch) => ({\n        EditorActions : bindActionCreators(editorActions,dispatch)\n    })\n)(withRouter(EditorHeaderContainer));"]},"metadata":{},"sourceType":"module"}