{"ast":null,"code":"/**\n * marked - a markdown parser\n * Copyright (c) 2011-2020, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.marked = factory());\n})(this, function () {\n  'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o) {\n    var i = 0;\n\n    if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n      if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n\n    i = o[Symbol.iterator]();\n    return i.next.bind(i);\n  }\n\n  function createCommonjsModule(fn, module) {\n    return module = {\n      exports: {}\n    }, fn(module, module.exports), module.exports;\n  }\n\n  var defaults = createCommonjsModule(function (module) {\n    function getDefaults() {\n      return {\n        baseUrl: null,\n        breaks: false,\n        gfm: true,\n        headerIds: true,\n        headerPrefix: '',\n        highlight: null,\n        langPrefix: 'language-',\n        mangle: true,\n        pedantic: false,\n        renderer: null,\n        sanitize: false,\n        sanitizer: null,\n        silent: false,\n        smartLists: false,\n        smartypants: false,\n        tokenizer: null,\n        walkTokens: null,\n        xhtml: false\n      };\n    }\n\n    function changeDefaults(newDefaults) {\n      module.exports.defaults = newDefaults;\n    }\n\n    module.exports = {\n      defaults: getDefaults(),\n      getDefaults: getDefaults,\n      changeDefaults: changeDefaults\n    };\n  });\n  var defaults_1 = defaults.defaults;\n  var defaults_2 = defaults.getDefaults;\n  var defaults_3 = defaults.changeDefaults;\n  /**\n   * Helpers\n   */\n\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  var caret = /(^|[^\\[])\\^/g;\n\n  function edit(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0;\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n\n  function rtrim(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.substr(0, l - suffLen);\n  }\n\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  }\n\n  var helpers = {\n    escape: escape,\n    unescape: unescape,\n    edit: edit,\n    cleanUrl: cleanUrl,\n    resolveUrl: resolveUrl,\n    noopTest: noopTest,\n    merge: merge,\n    splitCells: splitCells,\n    rtrim: rtrim,\n    findClosingBracket: findClosingBracket,\n    checkSanitizeDeprecation: checkSanitizeDeprecation\n  };\n  var defaults$1 = defaults.defaults;\n  var rtrim$1 = helpers.rtrim,\n      splitCells$1 = helpers.splitCells,\n      _escape = helpers.escape,\n      findClosingBracket$1 = helpers.findClosingBracket;\n\n  function outputLink(cap, link, raw) {\n    var href = link.href;\n    var title = link.title ? _escape(link.title) : null;\n\n    if (cap[0].charAt(0) !== '!') {\n      return {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: cap[1]\n      };\n    } else {\n      return {\n        type: 'image',\n        raw: raw,\n        text: _escape(cap[1]),\n        href: href,\n        title: title\n      };\n    }\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer_1 = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || defaults$1;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap) {\n        if (cap[0].length > 1) {\n          return {\n            type: 'space',\n            raw: cap[0]\n          };\n        }\n\n        return {\n          raw: '\\n'\n        };\n      }\n    };\n\n    _proto.code = function code(src, tokens) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n        if (lastToken && lastToken.type === 'paragraph') {\n          return {\n            raw: cap[0],\n            text: cap[0].trimRight()\n          };\n        }\n\n        var text = cap[0].replace(/^ {4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim$1(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: cap[2]\n        };\n      }\n    };\n\n    _proto.nptable = function nptable(src) {\n      var cap = this.rules.block.nptable.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells$1(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : [],\n          raw: cap[0]\n        };\n\n        if (item.header.length === item.align.length) {\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells$1(item.cells[i], item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *> ?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var bull = cap[2];\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: raw,\n          ordered: isordered,\n          start: isordered ? +bull : '',\n          loose: false,\n          items: []\n        }; // Get each top-level item.\n\n        var itemMatch = cap[0].match(this.rules.block.item);\n        var next = false,\n            item,\n            space,\n            b,\n            addBack,\n            loose,\n            istask,\n            ischecked;\n        var l = itemMatch.length;\n\n        for (var i = 0; i < l; i++) {\n          item = itemMatch[i];\n          raw = item; // Remove the list item's bullet\n          // so it is seen as the next token.\n\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+\\.) */, ''); // Outdent whatever the\n          // list item contains. Hacky.\n\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n          } // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n\n\n          if (i !== l - 1) {\n            b = this.rules.block.bullet.exec(itemMatch[i + 1])[0];\n\n            if (bull.length > 1 ? b.length === 1 : b.length > 1 || this.options.smartLists && b !== bull) {\n              addBack = itemMatch.slice(i + 1).join('\\n');\n              list.raw = list.raw.substring(0, list.raw.length - addBack.length);\n              i = l - 1;\n            }\n          } // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n\n\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n\n          if (i !== l - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n            if (!loose) loose = next;\n          }\n\n          if (loose) {\n            list.loose = true;\n          } // Check for task list items\n\n\n          istask = /^\\[[ xX]\\] /.test(item);\n          ischecked = undefined;\n\n          if (istask) {\n            ischecked = item[1] !== ' ';\n            item = item.replace(/^\\[[ xX]\\] +/, '');\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: istask,\n            checked: ischecked,\n            loose: loose,\n            text: item\n          });\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        return {\n          type: this.options.sanitize ? 'paragraph' : 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells$1(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells$1(item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''), item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1]\n        };\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        return {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n        };\n      }\n    };\n\n    _proto.text = function text(src, tokens) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        var lastToken = tokens[tokens.length - 1];\n\n        if (lastToken && lastToken.type === 'text') {\n          return {\n            raw: cap[0],\n            text: cap[0]\n          };\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0]\n        };\n      }\n    };\n\n    _proto.escape = function escape(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: _escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src, inLink, inRawBlock) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!inLink && /^<a /i.test(cap[0])) {\n          inLink = true;\n        } else if (inLink && /^<\\/a>/i.test(cap[0])) {\n          inLink = false;\n        }\n\n        if (!inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = true;\n        } else if (inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: inLink,\n          inRawBlock: inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var lastParenIndex = findClosingBracket$1(cap[2], '()');\n\n        if (lastParenIndex > -1) {\n          var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          var linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          } else {\n            title = '';\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n        var token = outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0]);\n        return token;\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        var token = outputLink(cap, link, cap[0]);\n        return token;\n      }\n    };\n\n    _proto.strong = function strong(src) {\n      var cap = this.rules.inline.strong.exec(src);\n\n      if (cap) {\n        return {\n          type: 'strong',\n          raw: cap[0],\n          text: cap[4] || cap[3] || cap[2] || cap[1]\n        };\n      }\n    };\n\n    _proto.em = function em(src) {\n      var cap = this.rules.inline.em.exec(src);\n\n      if (cap) {\n        return {\n          type: 'em',\n          raw: cap[0],\n          text: cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]\n        };\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = text.startsWith(' ') && text.endsWith(' ');\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = _escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[1]\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = _escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = _escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, inRawBlock, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0];\n        } else {\n          text = _escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  var noopTest$1 = helpers.noopTest,\n      edit$1 = helpers.edit,\n      merge$1 = helpers.merge;\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^\\n+/,\n    code: /^( {4}[^\\n]+\\n*)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6}) +([^\\n]*?)(?: +#+)? *(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    nptable: noopTest$1,\n    table: noopTest$1,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit$1(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\n  block.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\n  block.item = edit$1(block.item, 'gm').replace(/bull/g, block.bullet).getRegex();\n  block.list = edit$1(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\n  block.html = edit$1(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit$1(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit$1(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge$1({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge$1({}, block.normal, {\n    nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' *([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)',\n    // Cells\n    table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' *\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block.gfm.nptable = edit$1(block.gfm.nptable).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block.gfm.table = edit$1(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = merge$1({}, block.normal, {\n    html: edit$1('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n    fences: noopTest$1,\n    // fences not supported\n    paragraph: edit$1(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest$1,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n    strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n    em: /^_([^\\s_])_(?!_)|^_([^\\s_<][\\s\\S]*?[^\\s_])_(?!_|[^\\s,punctuation])|^_([^\\s_<][\\s\\S]*?[^\\s])_(?!_|[^\\s,punctuation])|^\\*([^\\s*<\\[])\\*(?!\\*)|^\\*([^\\s<\"][\\s\\S]*?[^\\s\\[\\*])\\*(?![\\]`punctuation])|^\\*([^\\s*\"<\\[][\\s\\S]*[^\\s])\\*(?!\\*)/,\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest$1,\n    text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/\n  }; // list of punctuation marks from common mark spec\n  // without ` and ] to workaround Rule 17 (inline code blocks/links)\n  // without , to work around example 393\n\n  inline._punctuation = '!\"#$%&\\'()*+\\\\-./:;<=>?@\\\\[^_{|}~';\n  inline.em = edit$1(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit$1(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit$1(inline.tag).replace('comment', block._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[[^\\[\\]]*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit$1(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit$1(inline.reflink).replace('label', inline._label).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge$1({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge$1({}, inline.normal, {\n    strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n    link: edit$1(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit$1(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge$1({}, inline.normal, {\n    escape: edit$1(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n    text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n  });\n  inline.gfm.url = edit$1(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge$1({}, inline.gfm, {\n    br: edit$1(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit$1(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n  var rules = {\n    block: block,\n    inline: inline\n  };\n  var defaults$2 = defaults.defaults;\n  var block$1 = rules.block,\n      inline$1 = rules.inline;\n  /**\n   * smartypants text replacement\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer_1 = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || defaults$2;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer_1();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      var rules = {\n        block: block$1.normal,\n        inline: inline$1.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block$1.pedantic;\n        rules.inline = inline$1.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block$1.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline$1.breaks;\n        } else {\n          rules.inline = inline$1.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n    /**\n     * Static Lex Method\n     */\n\n\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n      this.blockTokens(src, this.tokens, true);\n      this.inline(this.tokens);\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens, top) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (top === void 0) {\n        top = true;\n      }\n\n      src = src.replace(/^ +$/gm, '');\n      var token, i, l, lastToken;\n\n      while (src) {\n        // newline\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type) {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src, tokens)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type) {\n            tokens.push(token);\n          } else {\n            lastToken = tokens[tokens.length - 1];\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // table no leading pipe (gfm)\n\n\n        if (token = this.tokenizer.nptable(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.blockTokens(token.text, [], top);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          l = token.items.length;\n\n          for (i = 0; i < l; i++) {\n            token.items[i].tokens = this.blockTokens(token.items[i].text, [], false);\n          }\n\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (top && (token = this.tokenizer.def(src))) {\n          src = src.substring(token.raw.length);\n\n          if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n\n\n        if (top && (token = this.tokenizer.paragraph(src))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src, tokens)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type) {\n            tokens.push(token);\n          } else {\n            lastToken = tokens[tokens.length - 1];\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _proto.inline = function inline(tokens) {\n      var i, j, k, l2, row, token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'paragraph':\n          case 'text':\n          case 'heading':\n            {\n              token.tokens = [];\n              this.inlineTokens(token.text, token.tokens);\n              break;\n            }\n\n          case 'table':\n            {\n              token.tokens = {\n                header: [],\n                cells: []\n              }; // header\n\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                token.tokens.header[j] = [];\n                this.inlineTokens(token.header[j], token.tokens.header[j]);\n              } // cells\n\n\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.cells[j];\n                token.tokens.cells[j] = [];\n\n                for (k = 0; k < row.length; k++) {\n                  token.tokens.cells[j][k] = [];\n                  this.inlineTokens(row[k], token.tokens.cells[j][k]);\n                }\n              }\n\n              break;\n            }\n\n          case 'blockquote':\n            {\n              this.inline(token.tokens);\n              break;\n            }\n\n          case 'list':\n            {\n              l2 = token.items.length;\n\n              for (j = 0; j < l2; j++) {\n                this.inline(token.items[j].tokens);\n              }\n\n              break;\n            }\n        }\n      }\n\n      return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens, inLink, inRawBlock) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (inLink === void 0) {\n        inLink = false;\n      }\n\n      if (inRawBlock === void 0) {\n        inRawBlock = false;\n      }\n\n      var token;\n\n      while (src) {\n        // escape\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src, inLink, inRawBlock)) {\n          src = src.substring(token.raw.length);\n          inLink = token.inLink;\n          inRawBlock = token.inRawBlock;\n          tokens.push(token);\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n          }\n\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n          }\n\n          tokens.push(token);\n          continue;\n        } // strong\n\n\n        if (token = this.tokenizer.strong(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // em\n\n\n        if (token = this.tokenizer.em(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.inlineText(src, inRawBlock, smartypants)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block$1,\n          inline: inline$1\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  var defaults$3 = defaults.defaults;\n  var cleanUrl$1 = helpers.cleanUrl,\n      escape$1 = helpers.escape;\n  /**\n   * Renderer\n   */\n\n  var Renderer_1 = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || defaults$3;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape$1(lang, true) + '\">' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n    };\n\n    _proto.blockquote = function blockquote(quote) {\n      return '<blockquote>\\n' + quote + '</blockquote>\\n';\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    };\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n      } // ignore IDs\n\n\n      return '<h' + level + '>' + text + '</h' + level + '>\\n';\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    };\n\n    _proto.listitem = function listitem(text) {\n      return '<li>' + text + '</li>\\n';\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    };\n\n    _proto.paragraph = function paragraph(text) {\n      return '<p>' + text + '</p>\\n';\n    };\n\n    _proto.table = function table(header, body) {\n      if (body) body = '<tbody>' + body + '</tbody>';\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    };\n\n    _proto.tablerow = function tablerow(content) {\n      return '<tr>\\n' + content + '</tr>\\n';\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n      return tag + content + '</' + type + '>\\n';\n    } // span level renderer\n    ;\n\n    _proto.strong = function strong(text) {\n      return '<strong>' + text + '</strong>';\n    };\n\n    _proto.em = function em(text) {\n      return '<em>' + text + '</em>';\n    };\n\n    _proto.codespan = function codespan(text) {\n      return '<code>' + text + '</code>';\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    };\n\n    _proto.del = function del(text) {\n      return '<del>' + text + '</del>';\n    };\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl$1(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape$1(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    };\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl$1(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n\n\n  var TextRenderer_1 = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype; // no need for block level renderers\n\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n  /**\n   * Slugger generates header id\n   */\n\n\n  var Slugger_1 = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n    /**\n     * Convert string to unique id\n     */\n\n\n    var _proto = Slugger.prototype;\n\n    _proto.slug = function slug(value) {\n      var slug = value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n\n      if (this.seen.hasOwnProperty(slug)) {\n        var originalSlug = slug;\n\n        do {\n          this.seen[originalSlug]++;\n          slug = originalSlug + '-' + this.seen[originalSlug];\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      this.seen[slug] = 0;\n      return slug;\n    };\n\n    return Slugger;\n  }();\n\n  var defaults$4 = defaults.defaults;\n  var unescape$1 = helpers.unescape;\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser_1 = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || defaults$4;\n      this.options.renderer = this.options.renderer || new Renderer_1();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer_1();\n      this.slugger = new Slugger_1();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape$1(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.tokens.header[j]), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.tokens.cells[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k]), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'text') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  var merge$2 = helpers.merge,\n      checkSanitizeDeprecation$1 = helpers.checkSanitizeDeprecation,\n      escape$2 = helpers.escape;\n  var getDefaults = defaults.getDefaults,\n      changeDefaults = defaults.changeDefaults,\n      defaults$5 = defaults.defaults;\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge$2({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation$1(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer_1.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            out = Parser_1.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          highlight(token.text, token.lang, function (err, code) {\n            if (err) {\n              return done(err);\n            }\n\n            if (code != null && code !== token.text) {\n              token.text = code;\n              token.escaped = true;\n            }\n\n            pending--;\n\n            if (pending === 0) {\n              done();\n            }\n          });\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    try {\n      var _tokens = Lexer_1.lex(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser_1.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape$2(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge$2(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = defaults$5;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function (extension) {\n    var opts = merge$2({}, extension);\n\n    if (extension.renderer) {\n      (function () {\n        var renderer = marked.defaults.renderer || new Renderer_1();\n\n        var _loop = function _loop(prop) {\n          var prevRenderer = renderer[prop];\n\n          renderer[prop] = function () {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n\n            var ret = extension.renderer[prop].apply(renderer, args);\n\n            if (ret === false) {\n              ret = prevRenderer.apply(renderer, args);\n            }\n\n            return ret;\n          };\n        };\n\n        for (var prop in extension.renderer) {\n          _loop(prop);\n        }\n\n        opts.renderer = renderer;\n      })();\n    }\n\n    if (extension.tokenizer) {\n      (function () {\n        var tokenizer = marked.defaults.tokenizer || new Tokenizer_1();\n\n        var _loop2 = function _loop2(prop) {\n          var prevTokenizer = tokenizer[prop];\n\n          tokenizer[prop] = function () {\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n\n            var ret = extension.tokenizer[prop].apply(tokenizer, args);\n\n            if (ret === false) {\n              ret = prevTokenizer.apply(tokenizer, args);\n            }\n\n            return ret;\n          };\n        };\n\n        for (var prop in extension.tokenizer) {\n          _loop2(prop);\n        }\n\n        opts.tokenizer = tokenizer;\n      })();\n    }\n\n    if (extension.walkTokens) {\n      var walkTokens = marked.defaults.walkTokens;\n\n      opts.walkTokens = function (token) {\n        extension.walkTokens(token);\n\n        if (walkTokens) {\n          walkTokens(token);\n        }\n      };\n    }\n\n    marked.setOptions(opts);\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      var token = _step.value;\n      callback(token);\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.tokens.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell, callback);\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.tokens.cells), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell, callback);\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n\n        default:\n          {\n            if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser_1;\n  marked.parser = Parser_1.parse;\n  marked.Renderer = Renderer_1;\n  marked.TextRenderer = TextRenderer_1;\n  marked.Lexer = Lexer_1;\n  marked.lexer = Lexer_1.lex;\n  marked.Tokenizer = Tokenizer_1;\n  marked.Slugger = Slugger_1;\n  marked.parse = marked;\n  var marked_1 = marked;\n  return marked_1;\n});","map":{"version":3,"sources":["/Users/junyoung/React/blog-frontend/node_modules/marked/lib/marked.js"],"names":["global","factory","exports","module","define","amd","self","marked","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_unsupportedIterableToArray","o","minLen","_arrayLikeToArray","n","toString","call","slice","constructor","name","Array","from","test","arr","len","arr2","_createForOfIteratorHelperLoose","Symbol","iterator","isArray","done","value","TypeError","next","bind","createCommonjsModule","fn","defaults","getDefaults","baseUrl","breaks","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","changeDefaults","newDefaults","defaults_1","defaults_2","defaults_3","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","html","encode","replace","unescapeTest","unescape","_","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","edit","regex","opt","source","obj","val","getRegex","RegExp","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","e","indexOf","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","rtrim","relativeBase","noopTest","exec","merge","arguments","hasOwnProperty","splitCells","tableRow","count","row","match","offset","str","escaped","curr","cells","split","splice","push","trim","c","invert","l","suffLen","currChar","substr","findClosingBracket","b","level","checkSanitizeDeprecation","console","warn","helpers","defaults$1","rtrim$1","splitCells$1","_escape","findClosingBracket$1","outputLink","cap","link","raw","title","type","text","indentCodeCompensation","matchIndentToCode","indentToCode","map","node","matchIndentInNode","indentInNode","join","Tokenizer_1","Tokenizer","options","_proto","space","src","rules","block","newline","code","tokens","lastToken","trimRight","codeBlockStyle","fences","lang","heading","depth","nptable","item","header","align","hr","blockquote","list","bull","isordered","ordered","start","loose","items","itemMatch","addBack","istask","ischecked","bullet","undefined","task","checked","pre","def","tag","table","lheading","paragraph","inline","inLink","inRawBlock","lastParenIndex","linkLen","token","_escapes","reflink","links","nolink","strong","em","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","startsWith","endsWith","br","del","autolink","url","prevCapZero","_backpedal","inlineText","noopTest$1","edit$1","merge$1","_paragraph","_label","_title","_tag","_comment","normal","_punctuation","_scheme","_email","_attribute","_href","_extended_email","defaults$2","block$1","inline$1","out","charCodeAt","Math","random","Lexer_1","Lexer","create","lex","lexer","blockTokens","top","errMsg","error","Error","j","k","l2","inlineTokens","get","defaults$3","cleanUrl$1","escape$1","Renderer_1","Renderer","_code","infostring","quote","_html","slugger","slug","body","startatt","listitem","checkbox","tablerow","content","tablecell","flags","image","_text","TextRenderer_1","TextRenderer","Slugger_1","Slugger","seen","originalSlug","defaults$4","unescape$1","Parser_1","Parser","textRenderer","parse","parser","l3","cell","itemBody","parseInline","unshift","merge$2","checkSanitizeDeprecation$1","escape$2","defaults$5","callback","err","pending","_tokens","message","setOptions","use","extension","opts","_loop","prop","prevRenderer","_len","args","_key","ret","apply","_loop2","prevTokenizer","_len2","_key2","_iterator","_step","_iterator2","_step2","_iterator3","_step3","_iterator4","_step4","_cell","marked_1"],"mappings":"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","sourcesContent":["/**\n * marked - a markdown parser\n * Copyright (c) 2011-2020, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.marked = factory());\n}(this, (function () { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o) {\n    var i = 0;\n\n    if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n      if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n\n    i = o[Symbol.iterator]();\n    return i.next.bind(i);\n  }\n\n  function createCommonjsModule(fn, module) {\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n  }\n\n  var defaults = createCommonjsModule(function (module) {\n    function getDefaults() {\n      return {\n        baseUrl: null,\n        breaks: false,\n        gfm: true,\n        headerIds: true,\n        headerPrefix: '',\n        highlight: null,\n        langPrefix: 'language-',\n        mangle: true,\n        pedantic: false,\n        renderer: null,\n        sanitize: false,\n        sanitizer: null,\n        silent: false,\n        smartLists: false,\n        smartypants: false,\n        tokenizer: null,\n        walkTokens: null,\n        xhtml: false\n      };\n    }\n\n    function changeDefaults(newDefaults) {\n      module.exports.defaults = newDefaults;\n    }\n\n    module.exports = {\n      defaults: getDefaults(),\n      getDefaults: getDefaults,\n      changeDefaults: changeDefaults\n    };\n  });\n  var defaults_1 = defaults.defaults;\n  var defaults_2 = defaults.getDefaults;\n  var defaults_3 = defaults.changeDefaults;\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  var caret = /(^|[^\\[])\\^/g;\n\n  function edit(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0;\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n\n  function rtrim(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.substr(0, l - suffLen);\n  }\n\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  }\n\n  var helpers = {\n    escape: escape,\n    unescape: unescape,\n    edit: edit,\n    cleanUrl: cleanUrl,\n    resolveUrl: resolveUrl,\n    noopTest: noopTest,\n    merge: merge,\n    splitCells: splitCells,\n    rtrim: rtrim,\n    findClosingBracket: findClosingBracket,\n    checkSanitizeDeprecation: checkSanitizeDeprecation\n  };\n\n  var defaults$1 = defaults.defaults;\n  var rtrim$1 = helpers.rtrim,\n      splitCells$1 = helpers.splitCells,\n      _escape = helpers.escape,\n      findClosingBracket$1 = helpers.findClosingBracket;\n\n  function outputLink(cap, link, raw) {\n    var href = link.href;\n    var title = link.title ? _escape(link.title) : null;\n\n    if (cap[0].charAt(0) !== '!') {\n      return {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: cap[1]\n      };\n    } else {\n      return {\n        type: 'image',\n        raw: raw,\n        text: _escape(cap[1]),\n        href: href,\n        title: title\n      };\n    }\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer_1 = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || defaults$1;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap) {\n        if (cap[0].length > 1) {\n          return {\n            type: 'space',\n            raw: cap[0]\n          };\n        }\n\n        return {\n          raw: '\\n'\n        };\n      }\n    };\n\n    _proto.code = function code(src, tokens) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n        if (lastToken && lastToken.type === 'paragraph') {\n          return {\n            raw: cap[0],\n            text: cap[0].trimRight()\n          };\n        }\n\n        var text = cap[0].replace(/^ {4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim$1(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: cap[2]\n        };\n      }\n    };\n\n    _proto.nptable = function nptable(src) {\n      var cap = this.rules.block.nptable.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells$1(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : [],\n          raw: cap[0]\n        };\n\n        if (item.header.length === item.align.length) {\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells$1(item.cells[i], item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *> ?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var bull = cap[2];\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: raw,\n          ordered: isordered,\n          start: isordered ? +bull : '',\n          loose: false,\n          items: []\n        }; // Get each top-level item.\n\n        var itemMatch = cap[0].match(this.rules.block.item);\n        var next = false,\n            item,\n            space,\n            b,\n            addBack,\n            loose,\n            istask,\n            ischecked;\n        var l = itemMatch.length;\n\n        for (var i = 0; i < l; i++) {\n          item = itemMatch[i];\n          raw = item; // Remove the list item's bullet\n          // so it is seen as the next token.\n\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+\\.) */, ''); // Outdent whatever the\n          // list item contains. Hacky.\n\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n          } // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n\n\n          if (i !== l - 1) {\n            b = this.rules.block.bullet.exec(itemMatch[i + 1])[0];\n\n            if (bull.length > 1 ? b.length === 1 : b.length > 1 || this.options.smartLists && b !== bull) {\n              addBack = itemMatch.slice(i + 1).join('\\n');\n              list.raw = list.raw.substring(0, list.raw.length - addBack.length);\n              i = l - 1;\n            }\n          } // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n\n\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n\n          if (i !== l - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n            if (!loose) loose = next;\n          }\n\n          if (loose) {\n            list.loose = true;\n          } // Check for task list items\n\n\n          istask = /^\\[[ xX]\\] /.test(item);\n          ischecked = undefined;\n\n          if (istask) {\n            ischecked = item[1] !== ' ';\n            item = item.replace(/^\\[[ xX]\\] +/, '');\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: istask,\n            checked: ischecked,\n            loose: loose,\n            text: item\n          });\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        return {\n          type: this.options.sanitize ? 'paragraph' : 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells$1(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells$1(item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''), item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1]\n        };\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        return {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n        };\n      }\n    };\n\n    _proto.text = function text(src, tokens) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        var lastToken = tokens[tokens.length - 1];\n\n        if (lastToken && lastToken.type === 'text') {\n          return {\n            raw: cap[0],\n            text: cap[0]\n          };\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0]\n        };\n      }\n    };\n\n    _proto.escape = function escape(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: _escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src, inLink, inRawBlock) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!inLink && /^<a /i.test(cap[0])) {\n          inLink = true;\n        } else if (inLink && /^<\\/a>/i.test(cap[0])) {\n          inLink = false;\n        }\n\n        if (!inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = true;\n        } else if (inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: inLink,\n          inRawBlock: inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var lastParenIndex = findClosingBracket$1(cap[2], '()');\n\n        if (lastParenIndex > -1) {\n          var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          var linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          } else {\n            title = '';\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n        var token = outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0]);\n        return token;\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        var token = outputLink(cap, link, cap[0]);\n        return token;\n      }\n    };\n\n    _proto.strong = function strong(src) {\n      var cap = this.rules.inline.strong.exec(src);\n\n      if (cap) {\n        return {\n          type: 'strong',\n          raw: cap[0],\n          text: cap[4] || cap[3] || cap[2] || cap[1]\n        };\n      }\n    };\n\n    _proto.em = function em(src) {\n      var cap = this.rules.inline.em.exec(src);\n\n      if (cap) {\n        return {\n          type: 'em',\n          raw: cap[0],\n          text: cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]\n        };\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = text.startsWith(' ') && text.endsWith(' ');\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = _escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[1]\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = _escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = _escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, inRawBlock, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0];\n        } else {\n          text = _escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  var noopTest$1 = helpers.noopTest,\n      edit$1 = helpers.edit,\n      merge$1 = helpers.merge;\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^\\n+/,\n    code: /^( {4}[^\\n]+\\n*)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6}) +([^\\n]*?)(?: +#+)? *(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    nptable: noopTest$1,\n    table: noopTest$1,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit$1(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\n  block.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\n  block.item = edit$1(block.item, 'gm').replace(/bull/g, block.bullet).getRegex();\n  block.list = edit$1(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\n  block.html = edit$1(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit$1(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit$1(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge$1({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge$1({}, block.normal, {\n    nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' *([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)',\n    // Cells\n    table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' *\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block.gfm.nptable = edit$1(block.gfm.nptable).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block.gfm.table = edit$1(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = merge$1({}, block.normal, {\n    html: edit$1('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n    fences: noopTest$1,\n    // fences not supported\n    paragraph: edit$1(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest$1,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n    strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n    em: /^_([^\\s_])_(?!_)|^_([^\\s_<][\\s\\S]*?[^\\s_])_(?!_|[^\\s,punctuation])|^_([^\\s_<][\\s\\S]*?[^\\s])_(?!_|[^\\s,punctuation])|^\\*([^\\s*<\\[])\\*(?!\\*)|^\\*([^\\s<\"][\\s\\S]*?[^\\s\\[\\*])\\*(?![\\]`punctuation])|^\\*([^\\s*\"<\\[][\\s\\S]*[^\\s])\\*(?!\\*)/,\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest$1,\n    text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/\n  }; // list of punctuation marks from common mark spec\n  // without ` and ] to workaround Rule 17 (inline code blocks/links)\n  // without , to work around example 393\n\n  inline._punctuation = '!\"#$%&\\'()*+\\\\-./:;<=>?@\\\\[^_{|}~';\n  inline.em = edit$1(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit$1(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit$1(inline.tag).replace('comment', block._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[[^\\[\\]]*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit$1(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit$1(inline.reflink).replace('label', inline._label).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge$1({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge$1({}, inline.normal, {\n    strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n    link: edit$1(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit$1(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge$1({}, inline.normal, {\n    escape: edit$1(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n    text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n  });\n  inline.gfm.url = edit$1(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge$1({}, inline.gfm, {\n    br: edit$1(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit$1(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n  var rules = {\n    block: block,\n    inline: inline\n  };\n\n  var defaults$2 = defaults.defaults;\n  var block$1 = rules.block,\n      inline$1 = rules.inline;\n  /**\n   * smartypants text replacement\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer_1 = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || defaults$2;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer_1();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      var rules = {\n        block: block$1.normal,\n        inline: inline$1.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block$1.pedantic;\n        rules.inline = inline$1.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block$1.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline$1.breaks;\n        } else {\n          rules.inline = inline$1.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n      this.blockTokens(src, this.tokens, true);\n      this.inline(this.tokens);\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens, top) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (top === void 0) {\n        top = true;\n      }\n\n      src = src.replace(/^ +$/gm, '');\n      var token, i, l, lastToken;\n\n      while (src) {\n        // newline\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type) {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src, tokens)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type) {\n            tokens.push(token);\n          } else {\n            lastToken = tokens[tokens.length - 1];\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // table no leading pipe (gfm)\n\n\n        if (token = this.tokenizer.nptable(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.blockTokens(token.text, [], top);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          l = token.items.length;\n\n          for (i = 0; i < l; i++) {\n            token.items[i].tokens = this.blockTokens(token.items[i].text, [], false);\n          }\n\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (top && (token = this.tokenizer.def(src))) {\n          src = src.substring(token.raw.length);\n\n          if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n\n\n        if (top && (token = this.tokenizer.paragraph(src))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src, tokens)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type) {\n            tokens.push(token);\n          } else {\n            lastToken = tokens[tokens.length - 1];\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _proto.inline = function inline(tokens) {\n      var i, j, k, l2, row, token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'paragraph':\n          case 'text':\n          case 'heading':\n            {\n              token.tokens = [];\n              this.inlineTokens(token.text, token.tokens);\n              break;\n            }\n\n          case 'table':\n            {\n              token.tokens = {\n                header: [],\n                cells: []\n              }; // header\n\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                token.tokens.header[j] = [];\n                this.inlineTokens(token.header[j], token.tokens.header[j]);\n              } // cells\n\n\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.cells[j];\n                token.tokens.cells[j] = [];\n\n                for (k = 0; k < row.length; k++) {\n                  token.tokens.cells[j][k] = [];\n                  this.inlineTokens(row[k], token.tokens.cells[j][k]);\n                }\n              }\n\n              break;\n            }\n\n          case 'blockquote':\n            {\n              this.inline(token.tokens);\n              break;\n            }\n\n          case 'list':\n            {\n              l2 = token.items.length;\n\n              for (j = 0; j < l2; j++) {\n                this.inline(token.items[j].tokens);\n              }\n\n              break;\n            }\n        }\n      }\n\n      return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens, inLink, inRawBlock) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (inLink === void 0) {\n        inLink = false;\n      }\n\n      if (inRawBlock === void 0) {\n        inRawBlock = false;\n      }\n\n      var token;\n\n      while (src) {\n        // escape\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src, inLink, inRawBlock)) {\n          src = src.substring(token.raw.length);\n          inLink = token.inLink;\n          inRawBlock = token.inRawBlock;\n          tokens.push(token);\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n          }\n\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n          }\n\n          tokens.push(token);\n          continue;\n        } // strong\n\n\n        if (token = this.tokenizer.strong(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // em\n\n\n        if (token = this.tokenizer.em(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.inlineText(src, inRawBlock, smartypants)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block$1,\n          inline: inline$1\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  var defaults$3 = defaults.defaults;\n  var cleanUrl$1 = helpers.cleanUrl,\n      escape$1 = helpers.escape;\n  /**\n   * Renderer\n   */\n\n  var Renderer_1 = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || defaults$3;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape$1(lang, true) + '\">' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n    };\n\n    _proto.blockquote = function blockquote(quote) {\n      return '<blockquote>\\n' + quote + '</blockquote>\\n';\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    };\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n      } // ignore IDs\n\n\n      return '<h' + level + '>' + text + '</h' + level + '>\\n';\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    };\n\n    _proto.listitem = function listitem(text) {\n      return '<li>' + text + '</li>\\n';\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    };\n\n    _proto.paragraph = function paragraph(text) {\n      return '<p>' + text + '</p>\\n';\n    };\n\n    _proto.table = function table(header, body) {\n      if (body) body = '<tbody>' + body + '</tbody>';\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    };\n\n    _proto.tablerow = function tablerow(content) {\n      return '<tr>\\n' + content + '</tr>\\n';\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n      return tag + content + '</' + type + '>\\n';\n    } // span level renderer\n    ;\n\n    _proto.strong = function strong(text) {\n      return '<strong>' + text + '</strong>';\n    };\n\n    _proto.em = function em(text) {\n      return '<em>' + text + '</em>';\n    };\n\n    _proto.codespan = function codespan(text) {\n      return '<code>' + text + '</code>';\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    };\n\n    _proto.del = function del(text) {\n      return '<del>' + text + '</del>';\n    };\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl$1(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape$1(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    };\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl$1(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n  var TextRenderer_1 = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n  var Slugger_1 = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n    /**\n     * Convert string to unique id\n     */\n\n\n    var _proto = Slugger.prototype;\n\n    _proto.slug = function slug(value) {\n      var slug = value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n\n      if (this.seen.hasOwnProperty(slug)) {\n        var originalSlug = slug;\n\n        do {\n          this.seen[originalSlug]++;\n          slug = originalSlug + '-' + this.seen[originalSlug];\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      this.seen[slug] = 0;\n      return slug;\n    };\n\n    return Slugger;\n  }();\n\n  var defaults$4 = defaults.defaults;\n  var unescape$1 = helpers.unescape;\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser_1 = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || defaults$4;\n      this.options.renderer = this.options.renderer || new Renderer_1();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer_1();\n      this.slugger = new Slugger_1();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape$1(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.tokens.header[j]), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.tokens.cells[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k]), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'text') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  var merge$2 = helpers.merge,\n      checkSanitizeDeprecation$1 = helpers.checkSanitizeDeprecation,\n      escape$2 = helpers.escape;\n  var getDefaults = defaults.getDefaults,\n      changeDefaults = defaults.changeDefaults,\n      defaults$5 = defaults.defaults;\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge$2({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation$1(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer_1.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            out = Parser_1.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          highlight(token.text, token.lang, function (err, code) {\n            if (err) {\n              return done(err);\n            }\n\n            if (code != null && code !== token.text) {\n              token.text = code;\n              token.escaped = true;\n            }\n\n            pending--;\n\n            if (pending === 0) {\n              done();\n            }\n          });\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    try {\n      var _tokens = Lexer_1.lex(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser_1.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape$2(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge$2(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = defaults$5;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function (extension) {\n    var opts = merge$2({}, extension);\n\n    if (extension.renderer) {\n      (function () {\n        var renderer = marked.defaults.renderer || new Renderer_1();\n\n        var _loop = function _loop(prop) {\n          var prevRenderer = renderer[prop];\n\n          renderer[prop] = function () {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n\n            var ret = extension.renderer[prop].apply(renderer, args);\n\n            if (ret === false) {\n              ret = prevRenderer.apply(renderer, args);\n            }\n\n            return ret;\n          };\n        };\n\n        for (var prop in extension.renderer) {\n          _loop(prop);\n        }\n\n        opts.renderer = renderer;\n      })();\n    }\n\n    if (extension.tokenizer) {\n      (function () {\n        var tokenizer = marked.defaults.tokenizer || new Tokenizer_1();\n\n        var _loop2 = function _loop2(prop) {\n          var prevTokenizer = tokenizer[prop];\n\n          tokenizer[prop] = function () {\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n\n            var ret = extension.tokenizer[prop].apply(tokenizer, args);\n\n            if (ret === false) {\n              ret = prevTokenizer.apply(tokenizer, args);\n            }\n\n            return ret;\n          };\n        };\n\n        for (var prop in extension.tokenizer) {\n          _loop2(prop);\n        }\n\n        opts.tokenizer = tokenizer;\n      })();\n    }\n\n    if (extension.walkTokens) {\n      var walkTokens = marked.defaults.walkTokens;\n\n      opts.walkTokens = function (token) {\n        extension.walkTokens(token);\n\n        if (walkTokens) {\n          walkTokens(token);\n        }\n      };\n    }\n\n    marked.setOptions(opts);\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      var token = _step.value;\n      callback(token);\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.tokens.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell, callback);\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.tokens.cells), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell, callback);\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n\n        default:\n          {\n            if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser_1;\n  marked.parser = Parser_1.parse;\n  marked.Renderer = Renderer_1;\n  marked.TextRenderer = TextRenderer_1;\n  marked.Lexer = Lexer_1;\n  marked.lexer = Lexer_1.lex;\n  marked.Tokenizer = Tokenizer_1;\n  marked.Slugger = Slugger_1;\n  marked.parse = marked;\n  var marked_1 = marked;\n\n  return marked_1;\n\n})));\n"]},"metadata":{},"sourceType":"script"}