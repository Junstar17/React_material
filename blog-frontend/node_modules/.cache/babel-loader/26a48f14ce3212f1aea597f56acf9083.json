{"ast":null,"code":"import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport penderMiddleware from 'redux-pender';\nimport * as modules from './modules';\nconst reducers = combineReducers(modules);\nconst middlewares = [penderMiddleware()]; // 개발 모드일 때만 Redux Devtools 적용\n\nconst isDev = process.env.NODE_ENV === 'development';\nconst devtools = isDev && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst composeEnhancers = devtools || compose; // preloadedState는 추후 서버사이드 렌더링이 되었을 때 전달 받는 초기 상태입니다.\n\nconst configure = preloadedState => createStore(reducers, preloadedState, composeEnhancers(applyMiddleware(...middlewares)));\n\nexport default configure;","map":{"version":3,"sources":["/Users/junyoung/React/blog-frontend/src/store/configure.js"],"names":["createStore","applyMiddleware","compose","combineReducers","penderMiddleware","modules","reducers","middlewares","isDev","process","env","NODE_ENV","devtools","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","composeEnhancers","configure","preloadedState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,gBAAP,MAA6B,cAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AAEA,MAAMC,QAAQ,GAAGH,eAAe,CAACE,OAAD,CAAhC;AACA,MAAME,WAAW,GAAG,CAACH,gBAAgB,EAAjB,CAApB,C,CAEA;;AACA,MAAMI,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAvC;AACA,MAAMC,QAAQ,GAAGJ,KAAK,IAAIK,MAAM,CAACC,oCAAjC;AACA,MAAMC,gBAAgB,GAAGH,QAAQ,IAAIV,OAArC,C,CAEA;;AACA,MAAMc,SAAS,GAAIC,cAAD,IAAoBjB,WAAW,CAACM,QAAD,EAAWW,cAAX,EAA2BF,gBAAgB,CAC1Fd,eAAe,CAAC,GAAGM,WAAJ,CAD2E,CAA3C,CAAjD;;AAIA,eAAeS,SAAf","sourcesContent":["import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport penderMiddleware from 'redux-pender';\nimport * as modules from './modules';\n\nconst reducers = combineReducers(modules);\nconst middlewares = [penderMiddleware()];\n\n// 개발 모드일 때만 Redux Devtools 적용\nconst isDev = process.env.NODE_ENV === 'development';\nconst devtools = isDev && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst composeEnhancers = devtools || compose;\n\n// preloadedState는 추후 서버사이드 렌더링이 되었을 때 전달 받는 초기 상태입니다.\nconst configure = (preloadedState) => createStore(reducers, preloadedState, composeEnhancers(\n  applyMiddleware(...middlewares)\n));\n\nexport default configure;\n"]},"metadata":{},"sourceType":"module"}